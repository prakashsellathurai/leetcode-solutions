# 5-longest-palindromic-substring


Try it on <a href='https://leetcode.com/problems/5-longest-palindromic-substring'>leetcode</a>

## Description
<div class="description">
<div><p>Given a string <code>s</code>, return <em>the longest palindromic substring</em> in <code>s</code>.</p>

<p>&nbsp;</p>
<p><strong>Example 1:</strong></p>

<pre><strong>Input:</strong> s = "babad"
<strong>Output:</strong> "bab"
<strong>Explanation:</strong> "aba" is also a valid answer.
</pre>

<p><strong>Example 2:</strong></p>

<pre><strong>Input:</strong> s = "cbbd"
<strong>Output:</strong> "bb"
</pre>

<p>&nbsp;</p>
<p><strong>Constraints:</strong></p>

<ul>
	<li><code>1 &lt;= s.length &lt;= 1000</code></li>
	<li><code>s</code> consist of only digits and English letters.</li>
</ul>
</div>
</div>

## Solution(Python)
```Python
class Solution:
    def longestPalindrome(self, s: str) -> str:
        n = len(s)

        if n < 2:
            return s

        maxlen = 1
        start = 0

        for i in range(n):
            low = i - 1
            high = i + 1
            while high < n and s[high] == s[i]:
                high += 1
            while low >= 0 and s[low] == s[i]:
                low -= 1

            while low >= 0 and high < n and s[low] == s[high]:
                low -= 1
                high += 1

            cur_len = high - low - 1

            if cur_len > maxlen:
                maxlen = cur_len
                start = low + 1

        return s[start: start + maxlen]
```