# 59-spiral-matrix-ii


Try it on <a href='https://leetcode.com/problems/59-spiral-matrix-ii'>leetcode</a>

## Description
<div class="description">
<div><p>Given a positive integer <code>n</code>, generate an <code>n x n</code> <code>matrix</code> filled with elements from <code>1</code> to <code>n<sup>2</sup></code> in spiral order.</p>

<p>&nbsp;</p>
<p><strong>Example 1:</strong></p>
<img alt="" src="https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg" style="width: 242px; height: 242px;">
<pre><strong>Input:</strong> n = 3
<strong>Output:</strong> [[1,2,3],[8,9,4],[7,6,5]]
</pre>

<p><strong>Example 2:</strong></p>

<pre><strong>Input:</strong> n = 1
<strong>Output:</strong> [[1]]
</pre>

<p>&nbsp;</p>
<p><strong>Constraints:</strong></p>

<ul>
	<li><code>1 &lt;= n &lt;= 20</code></li>
</ul>
</div>
</div>

## Solution(Python)
```Python
class Solution:
    def generateMatrix(self, n):
        matrix = [[0] * n for _ in range(n)]
        x, y, dx, dy = 0, 0, 1, 0
        for i in range(n * n):
            matrix[y][x] = i + 1
            if (
                not 0 <= x + dx < n
                or not 0 <= y + dy < n
                or matrix[y + dy][x + dx] != 0
            ):
                dx, dy = -dy, dx
            x, y = x + dx, y + dy
        return matrix

```